# membrane 1
# 0.872 0.00 0.516 1.0 0.0 1.0 0.0 0.0 0.909 1.0 1.0 0.0 1.0 0.600 0.250 1.0 0.0 0.717 0.692 0.875 1.0 0.688 表6
# 0.465 0.263 0.236 0.000 0.612 0.152 0.287 0.400 0.182 0.000 0.000 0.679 0.333 0.400 0.500 0.500 0.294 0.243 0.000 0.000 0.487 0.0 # 表7
# 0.0 0.781 0.0 0.455 0.779 0.788 00.437 0.600 0.0 0.515 0.231 0.990 0.0 0.0 0.0 0.0 0.647 0.0 0.462 0.438 0.0 0.625 # 表8
# 0.939 1.0 1.0 0.818 1.0 0.515 0.844 1.0 0.545 0.557 0.154 1.0 0.0 1.0 0.500 0.667 0.706 0.229 0.615 0.688 0.017 0.875 #表9
# 1.0 0.192 0.718 0.727 0.421 0.0 1.0 0.80 1.0 0.850 0.846 0.875 0.333 0.80 1.0 0.833 1.0 1.0 1.0 1.0 0.671 1.0 # 表10
# 0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1 0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1 0.9 0.8 0.7 0.6
D = input("输入数据，以空格隔开：")

D = D.split(' ')
for i in range(0,22):
    D[i]=float(D[i])
import time

start = time.time()
i = 7000
while i > 0:
    d1 = pow(D[0], 1 / 2)
    d2 = pow(D[1], 1 / 3)
    d3 = pow(D[2], 1 / 4)
    # membrane 5
    c1 = (d1 + d2 + d3) / 3
    # # c1=0.990
    # # membrane 8、
    # d4 = pow(D[3], 1 / 2)
    # d5 = pow(D[4], 1 / 3)
    # d6 = pow(D[5], 1 / 4)
    # # membrane 6
    # c2 = min(d4, d5, d6)
    # # c2=0.847
    # # membrane 2
    # b1 = min(pow(c1, 1 / 2), pow(c2, 1 / 3))
    #
    # # membrane 12
    # d9 = pow(D[8], 1 / 2)
    # d7 = pow(D[6], 1 / 3)
    # d8 = pow(D[7], 1 / 4)
    # # membrane 9
    # c3 = min(d7, d8, d9)
    #
    # # membrane 13
    # d10 = pow(D[9], 1 / 2)
    # d11 = pow(D[10], 1 / 3)
    # d12 = pow(D[11], 1 / 4)
    # # membrane 10
    # c4 = (d10 + d11 + d12) / 3
    #
    # # membrane 14
    # d15 = pow(D[14], 1 / 2)
    # d13 = pow(D[12], 1 / 3)
    # d14 = pow(D[13], 1 / 4)
    # # membrane 11
    # c5 = (d13 + d14 + d15) / 3
    #
    # # membrane 3
    # b2 = min(pow(c3, 1 / 2), pow(c4, 1 / 3), pow(c5, 1 / 3))
    #
    # # membrane 17
    # d16 = pow(D[15], 1 / 2)
    # d18 = pow(D[17], 1 / 3)
    # d17 = pow(D[16], 1 / 4)
    # # membrane 11
    # c6 = min(d16, d17, d18)
    #
    # # membrane 18
    # d21 = pow(D[20], 1 / 2)
    # d19 = pow(D[18], 1 / 3)
    # d22 = pow(D[21], 1 / 4)
    # d20 = pow(D[19], 1 / 5)
    # # membrane 16
    # c7 = (d19 + d20 + d21 + d22) / 4
    #
    # # membrane 4
    # b3 = min(pow(c7, 1 / 2), pow(c6, 1 / 3))
    #
    # # membrane 1
    # a = (pow(b2, 1 / 2) + pow(b3, 1 / 3) + pow(b1, 1 / 4)) / 3
    i-=1
end = time.time()

print("cost time: " + str((end - start))+' s')
